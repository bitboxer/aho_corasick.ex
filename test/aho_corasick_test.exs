defmodule AhoCorasickTest do
  use ExUnit.Case
  import Debug


  test "add a term" do
    ag = AhoCorasick.new(["foo"])
    #debug :digraph.vertices(ag.graph)
    #debug :digraph.edges(ag.graph)

    # root plus 3 letters of "foo"
    assert 4 == AhoCorasick.num_nodes(ag)
  end

  test "add three terms" do
    ag = AhoCorasick.new(["foo", "for", "fall"])

    #AhoCorasick.print(ag)

    assert 8 == AhoCorasick.num_nodes(ag)
  end

  test "find a node by list of tokens" do
    ag = AhoCorasick.new(["foo", "for"])

    foo = AhoCorasick.node_at_path(ag, ["f", "o", "o"])

    foolabel = elem(foo, 1)

    assert foolabel == ["foo"]
  end

  test "term with a strict suffix term should have both in the label of the terminating node" do
    ag = AhoCorasick.new(["he", "she", "his", "hers"])

    #AhoCorasick.print(ag)

    she_node = ag |> AhoCorasick.node_at_path(["s", "h", "e"])

    she_node_label = elem(she_node, 1)

    assert she_node_label == ["she", "he"]
  end

  test "wikipedia example" do
    ag = AhoCorasick.new(["a", "ab", "bab", "bc", "bca", "c", "ca", "caa"])

    #AhoCorasick.print(ag)

    bca_node = ag |> AhoCorasick.node_at_path(["b", "c", "a"])

    bca_node_label = elem(bca_node, 1)

    # this node has three temrs in its label because they are strict suffixes of one another
    assert bca_node_label == ["bca", "ca", "a"]
  end

  test "searching with input text should yeild proper results" do

    ag = AhoCorasick.new(["he", "she", "his", "hers", "us"])

    results = AhoCorasick.search(ag, "what he said")

    assert results == MapSet.new([
      {"he", 5, 2}
    ])
  end

  test "searching with input text" do

    ag = AhoCorasick.new(["he", "she", "his", "hers", "us"])

    results = AhoCorasick.search(ag, "ushers")

    assert results == MapSet.new([
      {"he", 2, 2},
      {"hers", 2, 4},
      {"she", 1, 3},
      {"us", 0, 2}
    ])
  end


  test "larger example -- find out which languages are mentioned in the wikipedia article on 'programming languages'" do

    ag = AhoCorasick.new([
      "4th Dimension/4D",
      "ABAP",
      "ABC",
      "ActionScript",
      "Ada",
      "Agilent VEE",
      "Algol",
      "Alice",
      "Angelscript",
      "Apex",
      "APL",
      "AppleScript",
      "Arc",
      "Arduino",
      "ASP",
      "AspectJ",
      "Assembly",
      "ATLAS",
      "Augeas",
      "AutoHotkey",
      "AutoIt",
      "AutoLISP",
      "Automator",
      "Avenue",
      "Awk",
      "Bash",
      "(Visual) Basic",
      "bc",
      "BCPL",
      "BETA",
      "BlitzMax",
      "Boo",
      "Bourne Shell",
      "Bro",
      "C",
      "C Shell",
      "C#",
      "C++",
      "C++/CLI",
      "C-Omega",
      "Caml",
      "Ceylon",
      "CFML",
      "cg",
      "Ch",
      "CHILL",
      "CIL",
      "CL (OS/400)",
      "Clarion",
      "Clean",
      "Clipper",
      "Clojure",
      "CLU",
      "COBOL",
      "Cobra",
      "CoffeeScript",
      "ColdFusion",
      "COMAL",
      "Common Lisp",
      "Coq",
      "cT",
      "Curl",
      "D",
      "Dart",
      "DCL",
      "DCPU-16 ASM",
      "Delphi/Object Pascal",
      "DiBOL",
      "Dylan",
      "E",
      "eC",
      "Ecl",
      "ECMAScript",
      "EGL",
      "Eiffel",
      "Elixir",
      "Emacs Lisp",
      "Erlang",
      "Etoys",
      "Euphoria",
      "EXEC",
      "F#",
      "Factor",
      "Falcon",
      "Fancy",
      "Fantom",
      "Felix",
      "Forth",
      "Fortran",
      "Fortress",
      "(Visual) FoxPro",
      "Gambas",
      "GNU Octave",
      "Go",
      "Google AppsScript",
      "Gosu",
      "Groovy",
      "Haskell",
      "haXe",
      "Heron",
      "HPL",
      "HyperTalk",
      "Icon",
      "IDL",
      "Inform",
      "Informix-4GL",
      "INTERCAL",
      "Io",
      "Ioke",
      "J",
      "J#",
      "JADE",
      "Java",
      "Java FX Script",
      "JavaScript",
      "JScript",
      "JScript.NET",
      "Julia",
      "Korn Shell",
      "Kotlin",
      "LabVIEW",
      "Ladder Logic",
      "Lasso",
      "Limbo",
      "Lingo",
      "Lisp",
      "Logo",
      "Logtalk",
      "LotusScript",
      "LPC",
      "Lua",
      "Lustre",
      "M4",
      "MAD",
      "Magic",
      "Magik",
      "Malbolge",
      "MANTIS",
      "Maple",
      "Mathematica",
      "MATLAB",
      "Max/MSP",
      "MAXScript",
      "MEL",
      "Mercury",
      "Mirah",
      "Miva",
      "ML",
      "Monkey",
      "Modula-2",
      "Modula-3",
      "MOO",
      "Moto",
      "MS-DOS Batch",
      "MUMPS",
      "NATURAL",
      "Nemerle",
      "Nimrod",
      "NQC",
      "NSIS",
      "Nu",
      "NXT-G",
      "Oberon",
      "Object Rexx",
      "Objective-C",
      "Objective-J",
      "OCaml",
      "Occam",
      "ooc",
      "Opa",
      "OpenCL",
      "OpenEdge ABL",
      "OPL",
      "Oz",
      "Paradox",
      "Parrot",
      "Pascal",
      "Perl",
      "PHP",
      "Pike",
      "PILOT",
      "PL/I",
      "PL/SQL",
      "Pliant",
      "PostScript",
      "POV-Ray",
      "PowerBasic",
      "PowerScript",
      "PowerShell",
      "Processing",
      "Prolog",
      "Puppet",
      "Pure Data",
      "Python",
      "Q",
      "R",
      "Racket",
      "REALBasic",
      "REBOL",
      "Revolution",
      "REXX",
      "RPG (OS/400)",
      "Ruby",
      "Rust",
      "S",
      "S-PLUS",
      "SAS",
      "Sather",
      "Scala",
      "Scheme",
      "Scilab",
      "Scratch",
      "sed",
      "Seed7",
      "Self",
      "Shell",
      "SIGNAL",
      "Simula",
      "Simulink",
      "Slate",
      "Smalltalk",
      "Smarty",
      "SPARK",
      "SPSS",
      "SQR",
      "Squeak",
      "Squirrel",
      "Standard ML",
      "Suneido",
      "SuperCollider",
      "TACL",
      "Tcl",
      "Tex",
      "thinBasic",
      "TOM",
      "Transact-SQL",
      "Turing",
      "TypeScript",
      "Vala/Genie",
      "VBScript",
      "Verilog",
      "VHDL",
      "VimL",
      "Visual Basic .NET",
      "WebDNA",
      "Whitespace",
      "X10",
      "xBase",
      "XBase++",
      "Xen",
      "XPL",
      "XSLT",
      "XQuery",
      "yacc",
      "Yorick",
      "Z shell"
    ])

    {:ok, text} = File.read("test/article.txt")

    results = AhoCorasick.search(ag, text)

    assert results == MapSet.new([
      {"Lisp", 14986, 4},
      {"E", 30737, 1},
      {"D", 10942, 1},
      {"D", 1770, 1},
      {"S", 4121, 1},
      {"COBOL", 37237, 5},
      {"ML", 4161, 2},
      {"S", 10257, 1},
      {"Ada", 37376, 3},
      {"S", 14713, 1},
      {"C", 34233, 1},
      {"D", 7752, 1},
      {"J", 23601, 1},
      {"sed", 33599, 3},
      {"R", 8698, 1},
      {"Scheme", 31649, 6},
      {"Perl", 1561, 4},
      {"E", 21918, 1},
      {"C", 11400, 1},
      {"Lisp", 10574, 4},
      {"sed", 8376, 3},
      {"S", 31649, 1},
      {"Java", 24481, 4},
      {"R", 7548, 1},
      {"sed", 14979, 3},
      {"S", 24456, 1},
      {"S", 1520, 1},
      {"sed", 9501, 3},
      {"E", 40694, 1},
      {"S", 23001, 1},
      {"S", 2412, 1},
      {"R", 38339, 1},
      {"D", 7858, 1},
      {"sed", 14001, 3},
      {"S", 17815, 1},
      {"Erlang", 34680, 6},
      {"S", 26200, 1},
      {"S", 24831, 1},
      {"Python", 14086, 6},
      {"C", 37461, 1},
      {"R", 24497, 1},
      {"Tcl", 22291, 3},
      {"J", 25165, 1},
      {"sed", 30284, 3},
      {"S", 3743, 1},
      {"S", 8639, 1},
      {"Java", 38307, 4},
      {"Python", 24473, 6},
      {"C", 17178, 1},
      {"J", 38296, 1},
      {"sed", 13383, 3},
      {"sed", 23796, 3},
      {"Turing", 3804, 6},
      {"Java", 23601, 4},
      {"sed", 22901, 3},
      {"C", 23610, 1},
      {"Lisp", 24450, 4},
      {"S", 3746, 1},
      {"Java", 39034, 4},
      {"ML", 3892, 2},
      {"MATLAB", 34586, 6},
      {"sed", 7234, 3},
      {"S", 27245, 1},
      {"D", 18953, 1},
      {"sed", 761, 3},
      {"C", 34338, 1},
      {"S", 7859, 1},
      {"R", 32031, 1},
      {"sed", 34526, 3},
      {"J", 808, 1},
      {"C", 6824, 1},
      {"R", 11816, 1},
      {"PostScript", 2408, 10},
      {"S", 25096, 1},
      {"Bro", 7554, 3},
      {"S", 10160, 1},
      {"S", 30749, 1},
      {"J", 25092, 1},
      {"S", 60, 1},
      {"C", 23401, 1},
      {"C", 12952, 1},
      {"sed", 23293, 3},
      {"sed", 12460, 3},
      {"Python", 39238, 6},
      {"J", 33499, 1},
      {"C", 27346, 1},
      {"S", 27217, 1},
      {"Modula-2", 12118, 8},
      {"sed", 302, 3},
      {"C", 38422, 1},
      {"D", 23835, 1},
      {"sed", 34470, 3},
      {"S", 13888, 1},
      {"ML", 11803, 2},
      {"S", 30726, 1},
      {"Standard ML", 31629, 11},
      {"C", 12618, 1},
      {"C", 9189, 1},
      {"Smalltalk", 27245, 9},
      {"sed", 9939, 3},
      {"C", 11120, 1},
      {"S", 13861, 1},
      {"REXX", 21917, 4},
      {"Scheme", 27373, 6},
      {"Haskell", 23499, 7},
      {"R", 19782, 1},
      {"C++", 11400, 3},
      {"J", 24481, 1},
      {"C", 31581, 1},
      {"S", 30965, 1},
      {"sed", 18484, 3},
      {"S", 3739, 1},
      {"S", 7753, 1},
      {"R", 9943, 1},
      {"S", 25526, 1},
      {"C", 7861, 1},
      {"sed", 20719, 3},
      {"C", 12843, 1},
      {"PHP", 38302, 3},
      {"R", 21917, 1},
      {"Perl", 24467, 4},
      {"ML", 3898, 2},
      {"sed", 30584, 3},
      {"S", 25169, 1},
      {"S", 32824, 1},
      {"APL", 9755, 3},
      {"R", 8213, 1},
      {"R", 34459, 1},
      {"Turing", 3669, 6},
      {"S", 1401, 1},
      {"R", 8708, 1},
      {"Perl", 12345, 4},
      {"Turing", 5398, 6},
      {"C", 11016, 1},
      {"Java", 18841, 4},
      {"Perl", 25083, 4},
      {"Pascal", 12622, 6},
      {"ML", 31638, 2},
      {"Turing", 4266, 6},
      {"Q", 13120, 1},
      {"Lisp", 17651, 4},
      {"sed", 9255, 3},
      {"S", 17921, 1},
      {"S", 25421, 1},
      {"C", 23366, 1},
      {"S", 38332, 1},
      {"E", 30435, 1},
      {"C", 16293, 1},
      {"sed", 19602, 3},
      {"S", 21925, 1},
      {"S", 34607, 1},
      {"sed", 4586, 3},
      {"ML", 12137, 2},
      {"Smalltalk", 10257, 9},
      {"Java", 34295, 4},
      {"Forth", 22318, 5},
      {"Simula", 10160, 6},
      {"C++", 38319, 3},
      {"C", 7805, 1},
      {"D", 12620, 1},
      {"VBScript", 34597, 8},
      {"S", 27373, 1},
      {"C", 6684, 1},
      {"sed", 8280, 3},
      {"S", 6678, 1},
      {"sed", 3028, 3},
      {"Mercury", 7660, 7},
      {"sed", 12395, 3},
      {"sed", 12041, 3},
      {"E", 7751, 1},
      {"C", 38104, 1},
      {"S", 17321, 1},
      {"C", 22286, 1},
      {"sed", 20575, 3},
      {"S", 34858, 1},
      {"Java", 25165, 4},
      {"Java", 23373, 4},
      {"C", 38293, 1},
      {"J", 34295, 1},
      {"C", 16519, 1},
      {"J", 18841, 1},
      {"E", 17683, 1},
      {"C", 7755, 1},
      {"S", 1630, 1},
      {"C++", 23361, 3},
      {"sed", 34053, 3},
      {"COBOL", 9138, 5},
      {"D", 30445, 1},
      {"Shell", 38332, 5},
      {"Q", 3747, 1},
      {"E", 13503, 1},
      {"E", 10642, 1},
      {"sed", 12832, 3},
      {"J", 11600, 1},
      {"sed", 22002, 3},
      {"C", 1474, 1},
      {"Ruby", 38339, 4},
      {"E", 34680, 1},
      {"C", 37144, 1},
      {"C#", 23366, 2},
      {"Perl", 30640, 4},
      {"C", 25660, 1},
      {"sed", 36961, 3},
      {"JavaScript", 25092, 10},
      {"E", 16013, 1},
      {"C", 8658, 1},
      {"J", 38307, 1},
      {"S", 24485, 1},
      {"Ruby", 24497, 4},
      {"S", 37154, 1},
      {"JavaScript", 24481, 10},
      {"S", 13971, 1},
      {"S", 34136, 1},
      {"ML", 10529, 2},
      {"C", 116, 1},
      {"C", 8993, 1},
      {"Lisp", 10055, 4},
      {"Turing", 4144, 6},
      {"Perl", 17675, 4},
      {"D", 27669, 1},
      {"S", 34599, 1},
      {"J", 8242, 1},
      {"S", 11465, 1},
      {"sed", 2195, 3},
      {"S", 40476, 1},
      {"Java", 27151, 4},
      {"C", 26084, 1},
      {"J", 16402, 1},
      {"C", 37237, 1},
      {"C", 3757, 1},
      {"Python", 13934, 6},
      {"Prolog", 10452, 6},
      {"sed", 18287, 3},
      {"C", 8691, 1},
      {"Perl", 17347, 4},
      {"J", 23373, 1},
      {"Fortran", 37324, 7},
      {"R", 8215, 1},
      {"sed", 26532, 3},
      {"sed", 4339, 3},
      {"C", 18850, 1},
      {"C", 38361, 1},
      {"J", 39034, 1},
      {"C++", 31751, 3},
      {"S", 12619, 1},
      {"S", 6818, 1},
      {"JavaScript", 38307, 10},
      {"Q", 30750, 1},
      {"S", 1517, 1},
      {"C#", 34338, 2},
      {"R", 9935, 1},
      {"sed", 33246, 3},
      {"Prolog", 32016, 6},
      {"S", 18991, 1},
      {"Pascal", 11545, 6},
      {"C", 10993, 1},
      {"REXX", 32031, 4},
      {"D", 19949, 1},
      {"C", 34432, 1},
      {"JavaScript", 25165, 10},
      {"R", 34448, 1},
      {"E", 34705, 1},
      {"sed", 3390, 3},
      {"Lisp", 17356, 4},
      {"S", 1906, 1},
      {"Ada", 12128, 3},
      {"E", 7857, 1},
      {"Fortran", 31759, 7},
      {"sed", 8487, 3},
      {"S", 32028, 1},
      {"C", 34457, 1},
      {"sed", 4834, 3},
      {"C", 23361, 1},
      {"Lisp", 11810, 4},
      {"J", 12443, 1},
      {"sed", 7767, 3},
      {"E", 3549, 1},
      {"C", 27361, 1},
      {"R", 9228, 1},
      {"C#", 18850, 2},
      {"Bro", 7608, 3},
      {"Ada", 11496, 3},
      {"C", 9138, 1},
      {"C", 31751, 1},
      {"J", 6663, 1},
      {"E", 32032, 1},
      {"C", 38319, 1},
      {"E", 10935, 1},
      {"Java", 38296, 4},
      {"Smalltalk", 24456, 9},
      {"sed", 19540, 3},
      {"S", 22670, 1},
      {"Objective-C", 38345, 11},
      {"sed", 28982, 3},
      {"Go", 706, 2},
      {"XSLT", 4120, 4},
      {"sed", 4219, 3},
      {"C#", 38361, 2},
      {"C", 5089, 1},
      {"J", 5084, 1},
      {"S", 24948, 1},
      {"sed", 34654, 3},
      {"Python", 38324, 6},
      {"E", 8918, 1},
      {"S", 26143, 1},
      {"sed", 444, 3},
      {"E", 18213, 1},
      {"Mercury", 7910, 7},
      {"Java", 12443, 4},
      {"sed", 8611, 3},
      {"sed", 37542, 3},
      {"Java", 25092, 4},
      {"sed", 37714, 3},
      {"C#", 23610, 2},
      {"Ch", 17178, 2},
      {"C", 32826, 1},
      {"C", 10326, 1},
      {"S", 25339, 1},
      {"ML", 23511, 2},
      {"D", 7774, 1},
      {"BCPL", 22285, 4},
      {"J", 27151, 1},
      {"Mathematica", 7815, 11},
      {"S", 31629, 1},
      {"sed", 17893, 3},
      {"C", 25790, 1},
      {"C", 38355, 1},
      {"sed", 6695, 3},
      {"S", 38311, 1},
      {"C", 17736, 1},
      {"ML", 21927, 2},
      {"R", 5092, 1},
      {"E", 5587, 1},
      {"C", 26473, 1},
      {"Ch", 3757, 2}
    ])
  end

end
